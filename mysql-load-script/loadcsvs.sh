#!/bin/bash
#set -x
#sudo chmod +s loadcsvs.sh

####	file paths	####
ADX_GEO_FILE_PATH="./geo-data-files/geo-table.csv";
FIPS_REGION_CODES_FILE_PATH="./geo-data-files/FIPSRegionCodes/maxmind_region_codes.csv";
ISO_3166_3_CODES_FILE_PATH="./geo-data-files/CountryCodes-ISO-3166-3/country_codes_ISO-3166-1-alpha-3.csv";
ISO_TO_FIPS_CODES_FILE_PATH="./geo-data-files/CountryCodes-ISO-3166-3/fips2iso.csv";
ISO_3166_2_REGION_CODES_DIR_PATH="./geo-data-files/RegionCodes-ISO-3166-2";

####	database and table names	####
DBNAME="geoDB";
ADX_GEO_TABLE="adxGeoData";
ISO_3166_3_CODES_TABLE="iso31663CountryData";
ISO_TO_FIPS_CODES_TABLE="isoTofipsCodes"
ISO_3166_2_REGION_CODES_TABLE="iso31662RegionData";
FIPS_REGION_CODES_TABLE="fipsRegionData";


####	DB configuration ####
MYSQL_USERNAME="root";
MYSQL_PASSWORD="root123";
MYSQL_FILE_PATH="./mysql-load-script/creat_geo_tables.sql";

COUNTER=0;

createdb(){
				echo "creating sql file $MYSQL_FILE_PATH";

cat > $MYSQL_FILE_PATH << EOF
use $DBNAME;

#create table $ADX_GEO_TABLE

DROP TABLE IF EXISTS $ADX_GEO_TABLE;
CREATE TABLE $ADX_GEO_TABLE (dummy INT);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN CriteriaID INT;
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN Name VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN CanonicalName VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN ParentIDs VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN BlankField VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN CountryCode VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN TargetType VARCHAR(256);
ALTER TABLE $ADX_GEO_TABLE DROP COLUMN dummy;
#primary key added as last column for load csv to work
ALTER TABLE $ADX_GEO_TABLE ADD COLUMN id INT auto_increment primary key;
ALTER TABLE $ADX_GEO_TABLE ENGINE=InnoDB;
ALTER TABLE $ADX_GEO_TABLE CONVERT TO CHARACTER SET utf8;

#create table $ISO_3166_3_CODES_TABLE

DROP TABLE IF EXISTS $ISO_3166_3_CODES_TABLE;
CREATE TABLE $ISO_3166_3_CODES_TABLE (dummy INT);
ALTER TABLE $ISO_3166_3_CODES_TABLE ADD COLUMN CountryCode VARCHAR(256);
ALTER TABLE $ISO_3166_3_CODES_TABLE ADD COLUMN CountryName VARCHAR(256);
ALTER TABLE $ISO_3166_3_CODES_TABLE ADD COLUMN OtherName VARCHAR(256) DEFAULT "";
ALTER TABLE $ISO_3166_3_CODES_TABLE DROP COLUMN dummy;
#primary key added as last column for load csv to work
ALTER TABLE $ISO_3166_3_CODES_TABLE ADD COLUMN id INT auto_increment primary key;
ALTER TABLE $ISO_3166_3_CODES_TABLE ENGINE=InnoDB;
ALTER TABLE $ISO_3166_3_CODES_TABLE CONVERT TO CHARACTER SET utf8;

#create table $ISO_TO_FIPS_CODES_TABLE

DROP TABLE IF EXISTS $ISO_TO_FIPS_CODES_TABLE;
CREATE TABLE $ISO_TO_FIPS_CODES_TABLE (dummy INT);
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ADD COLUMN fipsCode VARCHAR(256) DEFAULT "";
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ADD COLUMN isoCodeA2 VARCHAR(256) DEFAULT "";
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ADD COLUMN isoCodeA3 VARCHAR(256) DEFAULT "";
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ADD COLUMN isoCodeN3 VARCHAR(256) DEFAULT "";
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE DROP COLUMN dummy;
#primary key added as last column for load csv to work
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ADD COLUMN id INT auto_increment primary key;
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE ENGINE=InnoDB;
ALTER TABLE $ISO_TO_FIPS_CODES_TABLE CONVERT TO CHARACTER SET utf8;

#create table $ISO_3166_2_REGION_CODES_TABLE

DROP TABLE IF EXISTS $ISO_3166_2_REGION_CODES_TABLE;
CREATE TABLE $ISO_3166_2_REGION_CODES_TABLE (dummy INT);
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ADD COLUMN CountryCode VARCHAR(256);
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ADD COLUMN RegionCode VARCHAR(256);
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ADD COLUMN RegionName VARCHAR(256);
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ADD COLUMN RegionLevel VARCHAR(256);
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE DROP COLUMN dummy;
#primary key added as last column for load csv to work
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ADD COLUMN id INT auto_increment primary key;
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE ENGINE=InnoDB;
ALTER TABLE $ISO_3166_2_REGION_CODES_TABLE CONVERT TO CHARACTER SET utf8;

#create table $FIPS_REGION_CODES_TABLE

DROP TABLE IF EXISTS $FIPS_REGION_CODES_TABLE;
CREATE TABLE $FIPS_REGION_CODES_TABLE (dummy INT);
ALTER TABLE $FIPS_REGION_CODES_TABLE ADD COLUMN CountryCode VARCHAR(256);
ALTER TABLE $FIPS_REGION_CODES_TABLE ADD COLUMN RegionCode VARCHAR(256);
ALTER TABLE $FIPS_REGION_CODES_TABLE ADD COLUMN RegionName VARCHAR(256);
ALTER TABLE $FIPS_REGION_CODES_TABLE DROP COLUMN dummy;
#primary key added as last column for load csv to work
ALTER TABLE $FIPS_REGION_CODES_TABLE ADD COLUMN id INT auto_increment primary key;
ALTER TABLE $FIPS_REGION_CODES_TABLE ENGINE=InnoDB;
ALTER TABLE $FIPS_REGION_CODES_TABLE CONVERT TO CHARACTER SET utf8;
EOF

				echo "Sourcing sql file $MYSQL_FILE_PATH"
				if [ -f $MYSQL_FILE_PATH ]; 
				then
					mysql -u$MYSQL_USERNAME -p$MYSQL_PASSWORD $DBNAME < $MYSQL_FILE_PATH; 
				fi
}

loadData(){
	FILENAME=$1;
	TABLENAME=$2;
	if [ -f $FILENAME ] 
	then
		echo "sourcing file $FILENAME to $TABLENAME";
		fname=`basename $FILENAME`; 
		#echo $fname;
		cp $FILENAME /tmp;sudo chown mysql:mysql /tmp/$fname;
		mysql -uroot -proot123 geoDB -e "LOAD DATA INFILE '/tmp/$fname' INTO TABLE $TABLENAME CHARACTER SET UTF8 FIELDS TERMINATED BY ',' OPTIONALLY ENCLOSED BY '\"' ESCAPED BY '\"' LINES TERMINATED BY '\n'"
		COUNTER=`expr $COUNTER + 1`;
		retval=$?;
		if [ $retval -ne 0 ] 
		then
			echo "FAILURE: sourcing file $FILENAME to $TABLENAME";
			exit;
		fi
	fi
}

loadDataFromDir(){
	DIRNAME=$1;
	TABLENAME=$2;
	FILELIST=sudo find $DIRNAME -name "*.csv";
	for FILENAME in `find $DIRNAME -name "*.csv"`; do
		loadData $FILENAME $TABLENAME;
	done
}

main(){
	date
	createdb;
	loadData $ADX_GEO_FILE_PATH $ADX_GEO_TABLE;
	loadData $ISO_3166_3_CODES_FILE_PATH $ISO_3166_3_CODES_TABLE;
	loadData $ISO_TO_FIPS_CODES_FILE_PATH $ISO_TO_FIPS_CODES_TABLE;
	loadDataFromDir $ISO_3166_2_REGION_CODES_DIR_PATH $ISO_3166_2_REGION_CODES_TABLE;
	loadData $FIPS_REGION_CODES_FILE_PATH $FIPS_REGION_CODES_TABLE;
	echo $COUNTER;
	date
}

main
